@import 'colours';

body {
  overflow-x: hidden;
  @media (min-width: 495px) {
    overflow-y: hidden;
  }
}

.alert {
  position: absolute;
}

.container-fluid {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

.jumbotron {
  padding: 0 !important;
  color: map-get($colours, electric-blue) !important;
  & > * {
    position: absolute;
    width: 100%;
  }
  img {
    z-index: -1;
    opacity: 0.7;
    filter: brightness(0.8);
  }
  .content{
    margin-top: 5rem;
    h1, h2 {
      color: map-get($colours, white) !important;
      text-shadow: 0 0 2rem map-get($colours, electric-blue);
    }
    form {
      @media (min-width: 495px) {
        margin: 6rem 0;
      }
      @media (max-width: 494px) {
        margin: 4rem 0 6rem;
      }
      border: {
        width: 3px;
        style: solid;
        color: map-get($colours, white);
        radius: 10px;
      }
      background-color: rgba(51, 51, 51, 0.4);
      padding: 2rem 2.5rem 5rem 2rem;
      button {
        background-image: -webkit-linear-gradient(top,map-get($colours, charcoal) 0,map-get($colours, black) 100%);
        background-image: -o-linear-gradient(top,map-get($colours, charcoal) 0,map-get($colours, black) 100%);
        background-image: -webkit-gradient(linear,left top,left bottom,from(map-get($colours, charcoal)),to(map-get($colours, black)));
        background-image: linear-gradient(to bottom,map-get($colours, charcoal) 0,map-get($colours, black) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff3c3c3c', endColorstr='#ff222222', GradientType=0);
        filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);
        background-repeat: repeat-x;
        color: map-get($colours, electric-blue);
        text-shadow: none;
        &:hover {
          background-color: inherit !important;
          background-position: 0;
          text-shadow: 0 0 1rem map-get($colours, white);
        }
        &:focus {
          background-color: inherit !important;
          background-position: 0;
        }
        &:active {
          color: map-get($colours, white);
          text-shadow: 0 0 1rem map-get($colours, electric-blue);
        }
      }
      .basic-search {
        text-align: right;
        & > .form-group {
          display: inline-table;
          vertical-align: middle;
          @media (min-width: 777px) {
            width: 48%;
          }
          @media (max-width: 776px) {
            width: 100%;
          }
        }
        & > span {
          @media (min-width: 777px) {
            width: 3.8%;
          }
        }
      }
      .advanced-search {
        clear: both;
        padding-top: 1rem;
        margin-bottom: -4rem;
        .form-group {
          @media (min-width: 495px) {
            &:first-child > *,
            &:nth-child(2) > * {
              display: inline-block;
              max-width: 20%;
            }
          }
          @media (max-width: 494px) {
            &:first-child > * {
              display: inline-block;
              max-width: 45%;
            }
            &:nth-child(2) > * {
              display: inline-block;
              max-width: 30%;
            }
          }
        }
        input[type=text], input[type=number], select {
          margin: 0 1rem;
        }
      }
    }
  }
}
